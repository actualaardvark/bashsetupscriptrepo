# The values in this script control the code found elsewhere in this repository
# Shell commands placed in this file will be executed before the rest of the scripts run

#VARIABLES

#USER ACCESS
# The ID for the user the script is targeting (Default: 502)
userid=502
# The username for the user with enrollment JAMF permissions (Default: admin)
requireduser=_applecore
# Where the password comes from. "legacy" means password.txt on the usb, "config" means this config file (Default: legacy)
passwordsource=legacy
# The admin user password (Default: example_password) (Requires single quotes for special characters)
adminpasswordconf='example_password'
# Enables/Disables automatic admin password entry (Default: true)
autopassword=true
# Sets the length of the prefix that decides the user's role (Default: 3)
prefixlength=3
# The two options below are non-functional. Support will be added later.
# Demotes users in array to standard (Default: (NLS NMS))
# Format: demoteusers=(Prefix1 Prefix2 Prefix3)
demoteusers=(NLS NMS)
# Promotes users in array to administrator (Default: (NUS NFS))
# Format: promoteusers=(Prefix1 Prefix2 Prefix3)
promoteusers=(NUS NFS)

#NETWORKING
# The ip address or website used to check network connection
connectioncheckurl=1.1.1.1
# Whether the script performs a network connection check before executing
connectioncheckenabled=true

#DISK PATHS
# The name of the USB drive containing the script (Requires Quotes) (Default: "") (Optional, not including it may cause issues)
usbdevicename="Install macOS Ventura"

#MAC GUIDED ENROLLMENT SCRIPT
# Enables/Disables the checklist view (Default: true)
checklistge=true
#Enables/Disables the username check (Default: true)
usernamecheck=true

#APP INSTALL INSPECTOR
# Enables/Disables the checklist view (Default: true)
checklistii=true
# Enables/Disables auto-refresh (Default: false)
autorefreshenabled=false
# Sets the delay between refreshes (Default: 5)
appcheckdelay=5

#GIT CONFIG
#The git branch to pull from
gitupdatebranch=main

#CONFIGURATION FILES
# Enables/Disables checking for configuration updates (Default: true)
configautoupdate="true"
# URL to update the config file from (Requires quotes) (Default: https://raw.githubusercontent.com/actualaardvark/bashsetupscriptrepo/$gitupdatebranch/values.conf)
configupdateurl="https://raw.githubusercontent.com/actualaardvark/bashsetupscriptrepo/$gitupdatebranch/values.conf"

#SCRIPTS
# Code in this section will be executed before each script in this program is run
# Editing is not recommended

# Local Path
cd "$(dirname "${BASH_SOURCE[0]}")"

# Gets the admin password and writes it it a text file
obtainadminpassword(){
    if [ $passwordsource == "legacy" ]; then
        read -p "Enter Admin Password (You'll only need to do this once): " adminpassword
	    echo "$adminpassword" > password.conf
    fi
}

# Checks if password.conf already exists
if [ ! -f  password.conf ]; then
    obtainadminpassword
fi

# Gets username by userid
usernamebyid=$(id -un $userid)

# Gets the users full name. Taken from Naming_Convention.sh
full_name=$(dscl . -read /Users/$usernamebyid RealName | awk -F': ' '{print $2}')

# The first 3 letters of the user account's full name
userlevel=${full_name:0:$prefixlength}

# Sets adminpassword based on the password source
if [ $passwordsource == "legacy" ]; then
    adminpassword=$(cat password.conf)
fi
if [ $passwordsource == "config" ]; then
    adminpassword=$adminpasswordconf
fi